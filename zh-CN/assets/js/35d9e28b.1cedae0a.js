"use strict";(self.webpackChunkoj_lab_docusaurus=self.webpackChunkoj_lab_docusaurus||[]).push([[2265],{5628:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=s(4848),r=s(8453);const o={},d="Models and APIs",i={id:"development/frontend/models-and-apis",title:"Models and APIs",description:"In this document, we will introduce how to use APIs",source:"@site/docs/development/frontend/models-and-apis.md",sourceDirName:"development/frontend",slug:"/development/frontend/models-and-apis",permalink:"/oj-lab-docusaurus/zh-CN/docs/development/frontend/models-and-apis",draft:!1,unlisted:!1,editUrl:"https://github.com/OJ-lab/oj-lab-docusaurus/tree/main/docs/development/frontend/models-and-apis.md",tags:[],version:"current",frontMatter:{},sidebar:"developmentSidebar",previous:{title:"Making View",permalink:"/oj-lab-docusaurus/zh-CN/docs/development/frontend/making-view"}},a={},c=[{value:"Models",id:"models",level:2},{value:"APIs",id:"apis",level:2},{value:"Use APIs in Hook",id:"use-apis-in-hook",level:3},{value:"Use APIs in Redux Saga",id:"use-apis-in-redux-saga",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"models-and-apis",children:"Models and APIs"}),"\n",(0,t.jsx)(n.p,{children:"In this document, we will introduce how to use APIs\nand how models help us safely constructing OJ Lab front's data transmission by TypeScript."}),"\n",(0,t.jsx)(n.h2,{id:"models",children:"Models"}),"\n",(0,t.jsxs)(n.p,{children:["In OJ Lab front, models are classified into two types: ",(0,t.jsx)(n.code,{children:"ServiceModel"})," and ",(0,t.jsx)(n.code,{children:"ViewModel"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ServiceModel"})," is expected to be exactly the format of the data returned by the backend APIs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ViewModel"})," on the other hand, provides a more user-friendly format for the front-end components.\nThey are usually transformed from the ",(0,t.jsx)(n.code,{children:"ServiceModel"})," through ",(0,t.jsx)(n.code,{children:"/pipes"})," module."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { formatBytes, formatNanoSeconds } from "@/utils/unit";\nimport * as JudgeServiceModel from "@/models/service/judge";\nimport * as JudgeViewModel from "@/models/view/judge";\n\nexport const judgeVerdictPipe = (\n  judgeVerdict: JudgeServiceModel.JudgeVerdict,\n): JudgeViewModel.JudgeVerdict => {\n  let verdict = judgeVerdict.verdict;\n  let time_usage = formatNanoSeconds(judgeVerdict.time_usage.nanos);\n  let memory_usage = formatBytes(judgeVerdict.memory_usage_bytes);\n\n  return { verdict, time_usage, memory_usage };\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we define a pipe function to transform the ",(0,t.jsx)(n.code,{children:"JudgeServiceModel.JudgeVerdict"})," to ",(0,t.jsx)(n.code,{children:"JudgeViewModel.JudgeVerdict"})," with ",(0,t.jsx)(n.code,{children:"formatBytes"})," and ",(0,t.jsx)(n.code,{children:"formatNanoSeconds"})," utility functions."]}),"\n",(0,t.jsx)(n.h2,{id:"apis",children:"APIs"}),"\n",(0,t.jsxs)(n.p,{children:["For RESTful APIs, we use ",(0,t.jsx)(n.code,{children:"axios"})," to send requests and handle responses."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'export async function getCurrentUser(): Promise<UserServiceModel.UserInfo> {\n  let res = await axiosClient.get<UserServiceModel.UserInfo>(\n    "/api/v1/user/current",\n  );\n  if (res.status !== 200) {\n    throw Error("failed to get current user");\n  }\n  return res.data;\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"axiosClient"})," is a utility function that wraps ",(0,t.jsx)(n.code,{children:"axios"})," with some default configurations."]}),"\n",(0,t.jsx)(n.h3,{id:"use-apis-in-hook",children:"Use APIs in Hook"}),"\n",(0,t.jsx)(n.p,{children:"In OJ Lab front, we usually hook detailed APIs usage in customized hooks."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"export const useJudge = (uid: string) => {\n  const [judge, setJudge] = useState<JudgeServiceModel.JudgeInfo>();\n  useEffect(() => {\n    JudgeService.getJudge(uid)\n      .then((res) => {\n        setJudge(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [uid]);\n\n  function getJudge() {\n    return judge;\n  }\n\n  return { getJudge };\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In the page component, we can use the ",(0,t.jsx)(n.code,{children:"useJudge"})," hook to get the judge data and render the components.\nThis part of code has been introduced in ",(0,t.jsx)(n.a,{href:"/oj-lab-docusaurus/zh-CN/docs/development/frontend/making-view#pages",children:"Making View"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"use-apis-in-redux-saga",children:"Use APIs in Redux Saga"}),"\n",(0,t.jsx)(n.p,{children:"A more advanced usage is to use APIs in Redux Saga.\nThis approach is usually used in global state management,\nfor example, getting the current user information when the app is initialized."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'function* getCurrentUserSaga() {\n  const user: UserServiceModel.UserInfo = yield call(getCurrentUser);\n  yield put(setUserInfo(user));\n}\n\nconst GetCurrentUserSagaPattern = "user/getCurrentUser/saga";\n\nexport const getCurrentUserAction: Action = {\n  type: GetCurrentUserSagaPattern,\n};\n\nexport function* watchGetUserInfo() {\n  yield takeEvery(GetCurrentUserSagaPattern, getCurrentUserSaga);\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Then in the layout component, we can dispatch the ",(0,t.jsx)(n.code,{children:"getCurrentUserAction"})," to trigger the saga."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const Layout: React.FC<LayoutProps> = (props) => {\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUserAction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ...\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Finally, you can use the ",(0,t.jsx)(n.code,{children:"useSelector"})," hook to get the user information in any component."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const UserMenu: React.FC<UserMenuProps> = (props) => {\n  // ...\n  const userInfo = useSelector(userInfoSelector);\n  const isLogined = userInfo !== undefined;\n\n  // ...\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var t=s(6540);const r={},o=t.createContext(r);function d(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);